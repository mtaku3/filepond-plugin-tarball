!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e||self).FilePondPluginTarball=t()}(this,function(){const e={name:100,mode:8,uid:8,gid:8,size:12,mtime:12,chksum:8,typeflag:1,linkname:100,magic:5,version:2,uname:32,gname:32,devmajor:8,devminor:8,prefix:155,padding:12},t={};Object.keys(e).reduce((n,r)=>(t[r]=n,n+e[r]),0);const n=e=>({name:e.name,mode:"777",uid:0,gid:0,size:e.content.byteLength,mtime:Math.floor(Number(new Date)/1e3),chksum:"        ",typeflag:"0",magic:"ustar",version:"  ",uname:"",gname:""}),r=["name","linkname","magic","chksum","typeflag","version","uname","gname"],i=512;function o(e,t){return("000000000000"+(e=e.toString(8))).slice(e.length+12-t)}function s(e){const t=new Uint8Array(e.length);for(let n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return t}class a extends File{constructor(...e){super(...e),this._relativePath=void 0}}const c={};return u=>({addFilter:l})=>(l("ADD_ITEMS",function(l){try{const m=(u=>((e=>{e.filter(e=>e._relativePath).forEach(e=>{const[,t]=e._relativePath.split("/");c[t]||(c[t]=[]),c[t].push(e)})})(u),Object.keys(c).map(u=>{const l=[];return c[u].forEach(e=>{l.push(new Promise(t=>{const n=new FileReader;n.addEventListener("load",n=>{t({name:e._relativePath.slice(1),content:new Uint8Array(n.target.result)})}),n.readAsArrayBuffer(e)}))}),delete c[u],function(){try{return Promise.resolve(Promise.all(l)).then(function(c){const l=function(a){let c=new Uint8Array(0);for(let u of a){"string"==typeof u.content&&(u.content=s(u.content)),u=Object.assign(n(u),u);const a=new Uint8Array(Math.ceil((i+u.size)/i)*i),l=Object.keys(e).reduce((n,i)=>{if(!(i in u))return n;const c=s(r.indexOf(i)>-1?u[i]:o(u[i],e[i]-1));return a.set(c,t[i]),n+c.reduce((e,t)=>e+t,0)},0);a.set(s(o(l,7)),t.chksum),a.set(u.content,i),sum=new Uint8Array(c.byteLength+a.byteLength),sum.set(c,0),sum.set(a,c.byteLength),c=sum}return sum=new Uint8Array(c.byteLength+1024),sum.set(c,0),sum}(c),m=new Blob([l],{type:"application/x-tar"});return new a([m],`${u}.tar`)})}catch(e){return Promise.reject(e)}}})))(l),f=l.filter(e=>!e._relativePath);return u?(u(m),Promise.resolve(f)):Promise.resolve(Promise.all(m.map(e=>e()))).then(function(e){return f.concat(e)})}catch(e){return Promise.reject(e)}}),{options:{}})});
