import e from"jszip";class t extends File{}export default r=>({addFilter:n})=>(n("FILTER_DROPPED_ITEMS",function(n){try{function o(e){return n.filter(e=>!e._relativePath).concat(e||[])}const s=()=>(r=>{const n=(e=>{const t=new Map;return e.filter(e=>e._relativePath).forEach(e=>{const[,r]=e._relativePath.split("/");t.has(r)||t.set(r,[]),t.get(r).push(e)}),t})(r),o=Array.from(n.keys()).map(function(r){try{const o=new e;return n.get(r).forEach(e=>{o.file(e._relativePath,e)}),n.delete(r),Promise.resolve(o.generateAsync({type:"blob"})).then(function(e){return new t([e],r+".zip")})}catch(e){return Promise.reject(e)}});return Promise.all(o)})(n);return Promise.resolve(r?o(r(s())):Promise.resolve(s()).then(o))}catch(e){return Promise.reject(e)}}),{options:{}});
//# sourceMappingURL=zipper.esm.js.map
