import e from"jszip";class t extends File{}const r={};export default n=>({addFilter:o})=>(o("ADD_ITEMS",function(o){try{function i(e){return o.filter(e=>!e._relativePath).concat(e||[])}const s=(n=>((e=>{e.filter(e=>e._relativePath).forEach(e=>{const[,t]=e._relativePath.split("/");r[t]||(r[t]=[]),r[t].push(e)})})(n),Object.keys(r).map(function(n){try{const o=new e;return r[n].forEach(e=>{o.file(e._relativePath,e)}),delete r[n],Promise.resolve(o.generateAsync({type:"blob"})).then(function(e){return new t([e],n+".zip")})}catch(e){return Promise.reject(e)}})))(o);return Promise.resolve(n?i(n(s)):Promise.resolve(Promise.all(s)).then(i))}catch(e){return Promise.reject(e)}}),{options:{}});
//# sourceMappingURL=zipper.esm.js.map
