import e from"jszip";class t extends File{}const r=window.JSZip||e;export default e=>({addFilter:n})=>(n("FILTER_DROPPED_ITEMS",function(n){try{function o(e){return n.filter(e=>!e._relativePath).concat(e||[])}const i=()=>(e=>{const n=(e=>{const t=new Map;return e.filter(e=>e._relativePath).forEach(e=>{const[,r]=e._relativePath.split("/");t.has(r)||t.set(r,[]),t.get(r).push(e)}),t})(e),o=Array.from(n.keys()).map(function(e){try{const o=new r;return n.get(e).forEach(e=>{o.file(e._relativePath,e)}),n.delete(e),Promise.resolve(o.generateAsync({type:"blob"})).then(function(r){return new t([r],e+".zip")})}catch(e){return Promise.reject(e)}});return Promise.all(o)})(n);return Promise.resolve(e?o(e(i())):Promise.resolve(i()).then(o))}catch(e){return Promise.reject(e)}}),{options:{}});
//# sourceMappingURL=zipper.esm.js.map
