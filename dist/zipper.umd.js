!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("jszip")):"function"==typeof define&&define.amd?define(["jszip"],t):(e=e||self).filepondPluginZipper=t(e.jszip)}(this,function(e){e=e&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e;class t extends File{}return r=>({addFilter:n})=>(n("FILTER_DROPPED_ITEMS",function(n){try{function o(e){return n.filter(e=>!e._relativePath).concat(e||[])}const i=()=>(r=>{const n=(e=>{const t=new Map;return e.filter(e=>e._relativePath).forEach(e=>{const[,r]=e._relativePath.split("/");t.has(r)||t.set(r,[]),t.get(r).push(e)}),t})(r),o=Array.from(n.keys()).map(function(r){try{const o=new e;return n.get(r).forEach(e=>{o.file(e._relativePath,e)}),n.delete(r),Promise.resolve(o.generateAsync({type:"blob"})).then(function(e){return new t([e],r+".zip")})}catch(e){return Promise.reject(e)}});return Promise.all(o)})(n);return Promise.resolve(r?o(r(i())):Promise.resolve(i()).then(o))}catch(e){return Promise.reject(e)}}),{options:{}})});
//# sourceMappingURL=zipper.umd.js.map
