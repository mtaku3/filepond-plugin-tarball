{"version":3,"file":"tarball.esm.js","sources":["../src/tarts.js","../src/types.ts","../src/utils.ts","../src/tarball.ts"],"sourcesContent":["export default tarts\n\nconst headers = {\n  name: 100,\n  mode: 8,\n  uid: 8,\n  gid: 8,\n  size: 12,\n  mtime: 12,\n  chksum: 8,\n  typeflag: 1,\n  linkname: 100,\n  magic: 5,\n  version: 2,\n  uname: 32,\n  gname: 32,\n  devmajor: 8,\n  devminor: 8,\n  prefix: 155,\n  padding: 12\n}\n\nconst offsets = {}\nObject.keys(headers).reduce((acc, k) => {\n  offsets[k] = acc\n  return acc + headers[k]\n}, 0)\n\nconst defaults = f => ({\n  name: f.name,\n  mode: '777',\n  uid: 0,\n  gid: 0,\n  size: f.content.byteLength,\n  mtime: Math.floor(Number(new Date()) / 1000),\n  chksum: '        ',\n  typeflag: '0',\n  magic: 'ustar',\n  version: '  ',\n  uname: '',\n  gname: ''\n})\n\nconst nopad = ['name', 'linkname', 'magic', 'chksum', 'typeflag', 'version', 'uname', 'gname']\n    , bsize = 512\n\nfunction tarts(files) {\n  let buffer = new Uint8Array(0)\n\n  for (let f of files) {\n    if (typeof f.content === 'string')\n      f.content = stringToUint8(f.content)\n\n    f = Object.assign(defaults(f), f)\n\n    const b = new Uint8Array(Math.ceil((bsize + f.size) / bsize) * bsize)\n\n    const checksum = Object.keys(headers).reduce((acc, k) => {\n      if (!(k in f))\n        return acc\n\n      const value = stringToUint8(nopad.indexOf(k) > -1\n        ? f[k]\n        : pad(f[k], headers[k] - 1))\n\n      b.set(value, offsets[k])\n      return acc + value.reduce((a, b) => a + b, 0)\n    }, 0)\n\n    b.set(stringToUint8(pad(checksum, 7)), offsets.chksum)\n    b.set(f.content, bsize)\n\n    sum = new Uint8Array(buffer.byteLength + b.byteLength)\n    sum.set(buffer, 0)\n    sum.set(b, buffer.byteLength)\n\n    buffer = sum;\n  }\n\n  sum = new Uint8Array(buffer.byteLength + bsize * 2);\n  sum.set(buffer, 0);\n\n  return sum;\n}\n\nfunction pad(s, n) {\n  s = s.toString(8)\n  return ('000000000000' + s).slice(s.length + 12 - n)\n}\n\nfunction stringToUint8(s) {\n  const a = new Uint8Array(s.length)\n  for (let i = 0; i < s.length; i++)\n    a[i] = s.charCodeAt(i)\n  return a\n}","interface TargetFilter {\n  ADD_ITEMS: string;\n}\n\nexport type FilterKey = keyof TargetFilter;\n\nexport interface ItemType extends File {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  _relativePath?: string;\n}\n\ntype FilterCallback = (items: ItemType[]) => Promise<ItemType[]>;\ntype AddFilterCallback = (key: FilterKey, callback: FilterCallback) => void;\n\nexport interface PluginOptions {\n  addFilter: AddFilterCallback;\n}\n\nexport interface Filter {\n  options: unknown;\n}\n\nexport interface Metadata {\n  percent: number;\n  currentFile: string;\n}\n\nexport type OnUpdateCallback = (metadata: Metadata) => void;\n\nexport type GeneratorCallback = (onUpdate?: OnUpdateCallback) => Promise<ItemType>;\n\nexport type TarballCallback = (generators: GeneratorCallback[]) => unknown;\n\nexport class Item extends File implements ItemType {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  _relativePath?: string;\n}\n","// eslint-disable-next-line import/no-extraneous-dependencies\nimport Tar from './tarts';\nimport {GeneratorCallback, Item, ItemType} from './types';\n\nconst directories = {};\n\nexport const getDirectoryGroups = (items: ItemType[]): Record<string, ItemType[]> => {\n  items\n    .filter((item) => item._relativePath)\n    .forEach((item) => {\n      const [, group] = item._relativePath.split('/');\n\n      if (!directories[group]) {\n        directories[group] = [];\n      }\n\n      directories[group].push(item);\n    });\n\n  return directories;\n};\n\nexport const generateTar = (items: ItemType[]): GeneratorCallback[] => {\n  getDirectoryGroups(items);\n\n  return Object.keys(directories).map((name) => {\n    const entries = [];\n\n    directories[name].forEach((file) => {\n      entries.push(\n        new Promise((resolve) => {\n          const reader = new FileReader();\n\n          reader.addEventListener('load', (event) => {\n            resolve({\n              // Delete first character of string because it starts with '/'\n              name: file._relativePath.slice(1),\n              content: new Uint8Array(event.target.result as ArrayBuffer),\n            });\n          });\n          reader.readAsArrayBuffer(file);\n        })\n      );\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n    delete directories[name];\n\n    return async (): Promise<ItemType> => {\n      const tar = Tar(await Promise.all(entries));\n      const file = new Blob([tar], {type: 'application/x-tar'});\n\n      return new Item([file], `${name}.tar`);\n    };\n  });\n};\n","import {Filter, PluginOptions, TarballCallback} from './types';\nimport {generateTar} from './utils';\n\nconst FilePondPluginTarball =\n  (callback?: TarballCallback) =>\n  ({addFilter}: PluginOptions): Filter => {\n    addFilter('ADD_ITEMS', async (items) => {\n      const generators = generateTar(items);\n      const plainFiles = items.filter((item) => !item._relativePath);\n\n      if (callback) {\n        callback(generators);\n\n        return plainFiles;\n      }\n\n      const tarFiles = await Promise.all(generators.map((generate) => generate()));\n\n      return plainFiles.concat(tarFiles);\n    });\n\n    return {options: {}};\n  };\n\nexport default FilePondPluginTarball;\n"],"names":["headers","name","mode","uid","gid","size","mtime","chksum","typeflag","linkname","magic","version","uname","gname","devmajor","devminor","prefix","padding","offsets","Object","keys","reduce","acc","k","defaults","f","content","byteLength","Math","floor","Number","Date","nopad","pad","s","n","toString","slice","length","stringToUint8","a","Uint8Array","i","charCodeAt","Item","File","constructor","args","super","this","_relativePath","directories","FilePondPluginTarball","callback","addFilter","items","generators","filter","item","forEach","group","split","push","getDirectoryGroups","map","entries","file","Promise","resolve","reader","FileReader","addEventListener","event","target","result","readAsArrayBuffer","all","then","_Promise$all","tar","files","buffer","assign","b","ceil","checksum","value","indexOf","set","sum","bsize","Tar","Blob","type","e","reject","generateTar","plainFiles","generate","tarFiles","concat","options"],"mappings":"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"}