import e from"jszip";class t extends File{}export default a=>({addFilter:r})=>(r("FILTER_DROPPED_ITEMS",async r=>{const n=()=>(a=>{const r=(e=>{const t=new Map;return e.filter(e=>e._relativePath).forEach(e=>{const[,a]=e._relativePath.split("/");t.has(a)||t.set(a,[]),t.get(a).push(e)}),t})(a),n=Array.from(r.keys()).map(async a=>{const n=new e;r.get(a).forEach(e=>{n.file(e._relativePath,e)}),r.delete(a);const s=await n.generateAsync({type:"blob"});return new t([s],a+".zip")});return Promise.all(n)})(r),s=a?a(n()):await n();return r.filter(e=>!e._relativePath).concat(s||[])}),{options:{}});
//# sourceMappingURL=zipper.modern.js.map
