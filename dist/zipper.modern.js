import t from"jszip";class e extends File{}const a=window.JSZip||t;export default t=>({addFilter:r})=>(r("FILTER_ADDED_ITEMS",async r=>{const n=()=>(t=>{const r=(t=>{const e={};return t.filter(t=>t._relativePath).forEach(t=>{const[,a]=t._relativePath.split("/");e[a]||(e[a]=[]),e[a].push(t)}),e})(t),n=Object.keys(r).map(async t=>{const n=new a;r[t].forEach(t=>{n.file(t._relativePath,t)}),delete r[t];const i=await n.generateAsync({type:"blob"});return new e([i],t+".zip")});return Promise.all(n)})(r),i=t?t(n()):await n();return r.filter(t=>!t._relativePath).concat(i||[])}),{options:{}});
//# sourceMappingURL=zipper.modern.js.map
