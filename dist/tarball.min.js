!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e||self).FilePondPluginTarball=t()}(this,function(){const e={name:100,mode:8,uid:8,gid:8,size:12,mtime:12,chksum:8,typeflag:1,linkname:100,magic:5,version:2,uname:32,gname:32,devmajor:8,devminor:8,prefix:155,padding:12},t={};Object.keys(e).reduce((n,r)=>(t[r]=n,n+e[r]),0);const n=["name","linkname","magic","chksum","typeflag","version","uname","gname"],r=512;function i(e,t){return("000000000000"+(e=e.toString(8))).slice(e.length+12-t)}function o(e){const t=new Uint8Array(e.length);for(let n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return t}class a extends File{constructor(...e){super(...e),this._relativePath=void 0}}const s={};return c=>({addFilter:u})=>(u("ADD_ITEMS",function(u){try{const l=(c=>((e=>{e.filter(e=>e._relativePath).forEach(e=>{const[,t]=e._relativePath.split("/");s[t]||(s[t]=[]),s[t].push(e)})})(c),Object.keys(s).map(c=>{const u=[];return s[c].forEach(e=>{u.push(new Promise(t=>{const n=new FileReader;n.addEventListener("load",n=>{t({name:e._relativePath,content:n.target.result})}),n.readAsArrayBuffer(e)}))}),delete s[c],function(){try{return Promise.resolve(Promise.all(u)).then(function(s){const u=s.reduce((a,s)=>{"string"==typeof s.content&&(s.content=o(s.content)),s=Object.assign((e=>({name:e.name,mode:"777",uid:0,gid:0,size:e.content.byteLength,mtime:Math.floor(Number(new Date)/1e3),chksum:"        ",typeflag:"0",magic:"ustar",version:"  ",uname:"",gname:""}))(s),s);const c=new Uint8Array(Math.ceil((r+s.size)/r)*r),u=Object.keys(e).reduce((r,a)=>{if(!(a in s))return r;const u=o(n.indexOf(a)>-1?s[a]:i(s[a],e[a]-1));return c.set(u,t[a]),r+u.reduce((e,t)=>e+t,0)},0);c.set(o(i(u,7)),t.chksum),c.set(s.content,r);const l=new Uint8Array(a.byteLength+c.byteLength);return l.set(a,0),l.set(c,a.byteLength),l},new Uint8Array(0)),l=new Blob([u],{type:"application/x-tar"});return new a([l],`${c}.tar`)})}catch(e){return Promise.reject(e)}}})))(u),m=u.filter(e=>!e._relativePath);return c?(c(l),Promise.resolve(m)):Promise.resolve(Promise.all(l.map(e=>e()))).then(function(e){return m.concat(e)})}catch(e){return Promise.reject(e)}}),{options:{}})});
//# sourceMappingURL=tarball.min.js.map
