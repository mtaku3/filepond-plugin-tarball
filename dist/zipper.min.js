!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("jszip")):"function"==typeof define&&define.amd?define(["jszip"],t):(e||self).FilepondZipper=t(e.JSZip)}(this,function(e){function t(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var r=/*#__PURE__*/t(e);class n extends File{constructor(...e){super(...e),this._relativePath=void 0}}const i={};return e=>({addFilter:t})=>(t("ADD_ITEMS",function(t){try{const o=(e=>((e=>{e.filter(e=>e._relativePath).forEach(e=>{const[,t]=e._relativePath.split("/");i[t]||(i[t]=[]),i[t].push(e)})})(e),Object.keys(i).map(e=>{const t=new r.default;return i[e].forEach(e=>{t.file(e._relativePath,e)}),delete i[e],function(r){try{return Promise.resolve(t.generateAsync({type:"blob"},r)).then(function(t){return new n([t],`${e}.zip`)})}catch(e){return Promise.reject(e)}}})))(t),s=t.filter(e=>!e._relativePath);return e?(e(o),Promise.resolve(s)):Promise.resolve(Promise.all(o.map(e=>e()))).then(function(e){return s.concat(e)})}catch(e){return Promise.reject(e)}}),{options:{}})});
//# sourceMappingURL=zipper.min.js.map
