!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("jszip")):"function"==typeof define&&define.amd?define(["jszip"],t):(e=e||self).FilepondZipper=t(e.jszip)}(this,function(e){e=e&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e;class t extends File{}const r=window.JSZip||e;return e=>({addFilter:n})=>(n("FILTER_DROPPED_ITEMS",function(n){try{function o(e){return n.filter(e=>!e._relativePath).concat(e||[])}const i=()=>(e=>{const n=(e=>{const t={};return e.filter(e=>e._relativePath).forEach(e=>{const[,r]=e._relativePath.split("/");t[r]||(t[r]=[]),t[r].push(e)}),t})(e),o=Object.keys(n).map(function(e){try{const o=new r;return n[e].forEach(e=>{o.file(e._relativePath,e)}),delete n[e],Promise.resolve(o.generateAsync({type:"blob"})).then(function(r){return new t([r],e+".zip")})}catch(e){return Promise.reject(e)}});return Promise.all(o)})(n);return Promise.resolve(e?o(e(i())):Promise.resolve(i()).then(o))}catch(e){return Promise.reject(e)}}),{options:{}})});
//# sourceMappingURL=zipper.min.js.map
